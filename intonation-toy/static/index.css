/* Basic CSS for Intonation Toy index.html */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: system-ui, -apple-system, sans-serif;
    background-color: #1a1a1a;
    color: #ffffff;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

main {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 20px;
}

/* Canvas styling for wgpu render target */
#wgpu-canvas {
    border: 1px solid #333;
    border-radius: 4px;
    background-color: #000;
}

/* Status color classes for Live Data Panel */
.status-value.status-success,
span.status-success {
    color: #22c55e !important; /* Green for processing/loaded/success states */
    font-weight: 600;
}

.status-value.status-neutral,
span.status-neutral {
    color: #ffffff !important; /* White for ready/neutral states */
    font-weight: 600;
}

.status-value.status-active,
span.status-active {
    color: #06b6d4 !important; /* Cyan for active/processing states */
    font-weight: 600;
}

.status-value.status-pending,
span.status-pending {
    color: #f59e0b !important; /* Amber for initializing/pending states */
    font-weight: 600;
}

.status-value.status-warning,
span.status-warning {
    color: #f97316 !important; /* Orange for stopped/warning states */
    font-weight: 600;
}

.status-value.status-error,
span.status-error {
    color: #ef4444 !important; /* Red for failed/error states */
    font-weight: 600;
}

.status-value.status-inactive,
span.status-inactive {
    color: #6b7280 !important; /* Gray for uninitialized/not loaded states */
    font-weight: 400;
}

/* Permission required styling */
.permission-required {
    color: #6b7280 !important; /* Gray color */
    font-style: italic !important; /* Italic font */
    font-weight: 400;
}

/* Control range styling - label and slider on same row */
.control-item.control-range {
    display: flex !important;
    flex-direction: row !important;
    align-items: center !important;
    gap: 12px !important;
    justify-content: space-between !important;
}

.control-item.control-range .control-label {
    min-width: 120px !important;
    flex-shrink: 0 !important;
    margin-bottom: 0 !important;
}

.control-item.control-range .control-slider-container {
    flex: 1 !important;
    display: flex !important;
    align-items: center !important;
    gap: 8px !important;
    margin-top: 0 !important;
}

/* Permission overlay styles */
.permission-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
    z-index: 9999;
    cursor: pointer;
}

.permission-panel, #permission-panel {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
    font-family: Arial, sans-serif;
    font-size: 18px;
    text-align: center;
    background: rgba(0, 0, 0, 0.8);
    padding: 30px;
    border-radius: 10px;
    min-width: 400px;
    box-shadow: 0 5px 25px rgba(0, 0, 0, 0.4);
    transition: background 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
}

.permission-panel:hover, #permission-panel:hover {
    background: rgba(30, 30, 80, 0.9);
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.6), 0 0 0 2px rgba(100, 100, 255, 0.5);
}

/* Animation keyframes for permission panel */
@keyframes permission-panel-pulse {
    0% {
        box-shadow: 0 5px 25px rgba(0, 0, 0, 0.4);
    }
    50% {
        box-shadow: 0 5px 30px rgba(0, 0, 0, 0.5), 0 0 0 1px rgba(255, 255, 255, 0.1);
    }
    100% {
        box-shadow: 0 5px 25px rgba(0, 0, 0, 0.4);
    }
}

.permission-panel.pulsing {
    animation: permission-panel-pulse 2s ease-in-out infinite;
}

name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Native testing on multiple platforms
  test-native:
    name: Native Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, beta]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check compilation (native)
      run: |
        cargo check --workspace --features test-native
        cargo check --workspace --features test-native --tests
    
    - name: Run native tests
      run: |
        cargo test --workspace --features test-native
    
    - name: Run clippy (native)
      run: |
        cargo clippy --workspace --features test-native --all-targets -- -D warnings
    
    - name: Check formatting
      if: matrix.rust == 'stable'
      run: cargo fmt --all -- --check

  # Web testing with wasm-pack
  test-web:
    name: Web Tests  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        node: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        targets: wasm32-unknown-unknown
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
    
    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: wasm-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          wasm-cargo-
    
    - name: Check web compilation
      run: |
        wasm-pack build intonation-toy --dev
        wasm-pack build dev-console --dev
    
    - name: Run web tests
      run: |
        wasm-pack test --node intonation-toy
        wasm-pack test --node dev-console

  # Build verification
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: build-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          build-cargo-
    
    - name: Verify native build
      run: |
        cargo build --workspace --features test-native
        cargo build --workspace --features test-native --release
    
    - name: Verify web build  
      run: |
        wasm-pack build intonation-toy --release
        wasm-pack build dev-console --release
    
    - name: Verify feature combinations
      run: |
        cargo check --manifest-path intonation-toy/Cargo.toml --features separation-logging,test-native
        cargo check --manifest-path intonation-toy/Cargo.toml --features separation-logging
        cargo check --manifest-path intonation-toy/Cargo.toml --no-default-features --features test-native
        cargo check --manifest-path dev-console/Cargo.toml --no-default-features --features test-native

  # Documentation check
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: docs-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          docs-cargo-
    
    - name: Build documentation
      run: |
        cargo doc --workspace --no-deps --document-private-items
        cargo doc --workspace --no-deps --document-private-items --features test-native

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit